library(sqldf)
library(gridExtra)
Args<-commandArgs(TRUE)
# get the command line arguments
rptjobID <- Args[1]
rptjobNumber <- Args[2]
outputFormat <- Args[3]
outputFileName <- Args[4]
# debug values below
rptjobID <- 3555451
rptjobNumber <- 1
outputFormat <- "pdf"
outputFileName <- "C:/temp/temp.pdf"
#
myconn <-odbcConnect("pristima",believeNRows=FALSE)
sqlString <- paste("select * from RPT_HEADER where rptjob_id=",rptjobID)
header = sqlQuery(myconn, sqlString)
sqlString <- paste("select * from RPT_PROTOCOL where rptjob_id=",rptjobID)
protocol = sqlQuery(myconn, sqlString)
# create phase footnote mapping
sqlString <- paste("SELECT DISTINCT FOOTNOTE_SYMBOL||'='||PHASE_NAME,report_order FROM RPT_BODY_WEIGHT where rptjob_id=",rptjobID,
" order by report_order")
phase_info = sqlQuery(myconn, sqlString)
Phase_info_string = paste("Phase abbreviations: ",paste(phase_info[,1], collapse = ","),collapse=" ")
numGraphs <- 0
pGraphs <- list()
for(i in 1:2){
# loop for males and females
if (i==1) {
aSex <- "'M'"
aSex1 <- "Males"
} else {
aSex<-"'F'"
aSex1 <- "Females"
}
# get from freetext, yMax
sqlStringF <- paste("SELECT FREE_TEXT FROM RPT_FREE_TEXT where rptjob_id=",rptjobID," AND FREE_TEXT_NAME='Max Y value ",aSex1,"'",sep="")
yMaxFreeText = sqlQuery(myconn,sqlStringF)
pGraphs[[i]] <- list()
# get all data, also, link in with group name
sqlString <- paste("select * from RPT_BODY_WEIGHT,RPT_GROUP_INFO where RPT_BODY_WEIGHT.group_number",
" is not null and RPT_BODY_WEIGHT.rptjob_id=",
rptjobID," and RPT_BODY_WEIGHT.GROUP_NUMBER=RPT_GROUP_INFO.GROUP_NUMBER ",
" and RPT_BODY_WEIGHT.SEX=RPT_GROUP_INFO.SEX ",
" and RPT_BODY_WEIGHT.RPTJOB_ID=RPT_GROUP_INFO.RPTJOB_ID ")
sqlString <-paste(sqlString," and RPT_BODY_WEIGHT.Sex = ")
sqlString <-paste(sqlString,aSex)
rslts = sqlQuery(myconn, sqlString)
#  some displays of the data:
rslts
# check if results
if (nrow(rslts) > 0) {
numGraphs <- numGraphs+1
# summarize to means by group, using phase footnote concatinated with day
# sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,FOOTNOTE_SYMBOL||padl(DAY_OF_PHASE,3) AS DAYPHS,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,FOOTNOTE_SYMBOL,DAY_OF_PHASE  ')
# summarize with phase name and day separately
sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,DAY_OF_PHASE,PHASE_NAME,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,PHASE_NAME,DAY_OF_PHASE')
# line plot of means with error bars
# Create a simple example dataset
df <- data.frame(
day = factor(sumres$DAY_OF_PHASE),
resp = sumres$avg,
phase = factor(sumrres$PHASE_NAME),
Group = factor(sumres$GROUP1),
se = sumres$stdev
)
# Define the top and bottom of the errorbars
limits <- aes(ymax = resp + se, ymin=resp - se)
pGraphs[[numGraphs]][[1]] <- ggplot(df, aes(colour=Group, shape=Group, y=resp, x=day))
# groups which define the lines - here the groups in the
# original dataframe
title <- "Body Weights Over Time\n Study "
title <- paste(title,protocol$STUDY_NUMBER)
title <- paste(title," : Sex =")
title <- paste(title,aSex)
title <- paste(title," \n")
title <- paste(title,"Printed: ")
title <- paste(title,header$DATE_TIME_ENTERED)
title <- paste(title," \n")
title <- paste(title,"Pristima ")
title <- paste(title,header$VERSION)
title <- paste(title," \n",Phase_info_string)
pGraphs[[numGraphs]][[1]] <- pGraphs[[numGraphs]][[1]] + geom_line(aes(group=Group)) +
geom_point(aes(group=Group)) + labs(x = "Phase/Day of Phase", y = "Body Weight (g)",title = title) +
scale_y_continuous(expand = c(0, 0),limits = c(0,as.numeric(yMaxFreeText[1]))) +
facet_grid(.~PHASE_NAME,scales="free")
}  # end row count check
}
# save to pdf, one per page
pdf(outputFileName, onefile = TRUE,width=11,height=8.5)
for (i in 1:numGraphs) {
do.call("grid.arrange", pGraphs[[i]])
}
dev.off()
close(myconn)
#rpt_body_weight.report_order is phase_name order
# Pristima bw plot
#install.packages("RODBC")
#install.packages("ggplot2")
#install.packages("sqldf")
#install.packages("gridExtra")
library(RODBC)
library(ggplot2)
library(sqldf)
library(gridExtra)
Args<-commandArgs(TRUE)
# get the command line arguments
rptjobID <- Args[1]
rptjobNumber <- Args[2]
outputFormat <- Args[3]
outputFileName <- Args[4]
# debug values below
rptjobID <- 3555451
rptjobNumber <- 1
outputFormat <- "pdf"
outputFileName <- "C:/temp/temp.pdf"
#
myconn <-odbcConnect("pristima",believeNRows=FALSE)
sqlString <- paste("select * from RPT_HEADER where rptjob_id=",rptjobID)
header = sqlQuery(myconn, sqlString)
sqlString <- paste("select * from RPT_PROTOCOL where rptjob_id=",rptjobID)
protocol = sqlQuery(myconn, sqlString)
# create phase footnote mapping
sqlString <- paste("SELECT DISTINCT FOOTNOTE_SYMBOL||'='||PHASE_NAME,report_order FROM RPT_BODY_WEIGHT where rptjob_id=",rptjobID,
" order by report_order")
phase_info = sqlQuery(myconn, sqlString)
Phase_info_string = paste("Phase abbreviations: ",paste(phase_info[,1], collapse = ","),collapse=" ")
numGraphs <- 0
pGraphs <- list()
for(i in 1:2){
# loop for males and females
if (i==1) {
aSex <- "'M'"
aSex1 <- "Males"
} else {
aSex<-"'F'"
aSex1 <- "Females"
}
# get from freetext, yMax
sqlStringF <- paste("SELECT FREE_TEXT FROM RPT_FREE_TEXT where rptjob_id=",rptjobID," AND FREE_TEXT_NAME='Max Y value ",aSex1,"'",sep="")
yMaxFreeText = sqlQuery(myconn,sqlStringF)
pGraphs[[i]] <- list()
# get all data, also, link in with group name
sqlString <- paste("select * from RPT_BODY_WEIGHT,RPT_GROUP_INFO where RPT_BODY_WEIGHT.group_number",
" is not null and RPT_BODY_WEIGHT.rptjob_id=",
rptjobID," and RPT_BODY_WEIGHT.GROUP_NUMBER=RPT_GROUP_INFO.GROUP_NUMBER ",
" and RPT_BODY_WEIGHT.SEX=RPT_GROUP_INFO.SEX ",
" and RPT_BODY_WEIGHT.RPTJOB_ID=RPT_GROUP_INFO.RPTJOB_ID ")
sqlString <-paste(sqlString," and RPT_BODY_WEIGHT.Sex = ")
sqlString <-paste(sqlString,aSex)
rslts = sqlQuery(myconn, sqlString)
#  some displays of the data:
rslts
# check if results
if (nrow(rslts) > 0) {
numGraphs <- numGraphs+1
# summarize to means by group, using phase footnote concatinated with day
# sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,FOOTNOTE_SYMBOL||padl(DAY_OF_PHASE,3) AS DAYPHS,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,FOOTNOTE_SYMBOL,DAY_OF_PHASE  ')
# summarize with phase name and day separately
sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,DAY_OF_PHASE,PHASE_NAME,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,PHASE_NAME,DAY_OF_PHASE')
# line plot of means with error bars
# Create a simple example dataset
df <- data.frame(
day = factor(sumres$DAY_OF_PHASE),
resp = sumres$avg,
phase = factor(sumres$PHASE_NAME),
Group = factor(sumres$GROUP1),
se = sumres$stdev
)
# Define the top and bottom of the errorbars
limits <- aes(ymax = resp + se, ymin=resp - se)
pGraphs[[numGraphs]][[1]] <- ggplot(df, aes(colour=Group, shape=Group, y=resp, x=day))
# groups which define the lines - here the groups in the
# original dataframe
title <- "Body Weights Over Time\n Study "
title <- paste(title,protocol$STUDY_NUMBER)
title <- paste(title," : Sex =")
title <- paste(title,aSex)
title <- paste(title," \n")
title <- paste(title,"Printed: ")
title <- paste(title,header$DATE_TIME_ENTERED)
title <- paste(title," \n")
title <- paste(title,"Pristima ")
title <- paste(title,header$VERSION)
title <- paste(title," \n",Phase_info_string)
pGraphs[[numGraphs]][[1]] <- pGraphs[[numGraphs]][[1]] + geom_line(aes(group=Group)) +
geom_point(aes(group=Group)) + labs(x = "Phase/Day of Phase", y = "Body Weight (g)",title = title) +
scale_y_continuous(expand = c(0, 0),limits = c(0,as.numeric(yMaxFreeText[1]))) +
facet_grid(.~PHASE_NAME,scales="free")
}  # end row count check
}
# save to pdf, one per page
pdf(outputFileName, onefile = TRUE,width=11,height=8.5)
for (i in 1:numGraphs) {
do.call("grid.arrange", pGraphs[[i]])
}
dev.off()
close(myconn)
#rpt_body_weight.report_order is phase_name order
# Pristima bw plot
#install.packages("RODBC")
#install.packages("ggplot2")
#install.packages("sqldf")
#install.packages("gridExtra")
library(RODBC)
library(ggplot2)
library(sqldf)
library(gridExtra)
Args<-commandArgs(TRUE)
# get the command line arguments
rptjobID <- Args[1]
rptjobNumber <- Args[2]
outputFormat <- Args[3]
outputFileName <- Args[4]
# debug values below
rptjobID <- 3555451
rptjobNumber <- 1
outputFormat <- "pdf"
outputFileName <- "C:/temp/temp.pdf"
#
myconn <-odbcConnect("pristima",believeNRows=FALSE)
sqlString <- paste("select * from RPT_HEADER where rptjob_id=",rptjobID)
header = sqlQuery(myconn, sqlString)
sqlString <- paste("select * from RPT_PROTOCOL where rptjob_id=",rptjobID)
protocol = sqlQuery(myconn, sqlString)
# create phase footnote mapping
sqlString <- paste("SELECT DISTINCT FOOTNOTE_SYMBOL||'='||PHASE_NAME,report_order FROM RPT_BODY_WEIGHT where rptjob_id=",rptjobID,
" order by report_order")
phase_info = sqlQuery(myconn, sqlString)
Phase_info_string = paste("Phase abbreviations: ",paste(phase_info[,1], collapse = ","),collapse=" ")
numGraphs <- 0
pGraphs <- list()
for(i in 1:2){
# loop for males and females
if (i==1) {
aSex <- "'M'"
aSex1 <- "Males"
} else {
aSex<-"'F'"
aSex1 <- "Females"
}
# get from freetext, yMax
sqlStringF <- paste("SELECT FREE_TEXT FROM RPT_FREE_TEXT where rptjob_id=",rptjobID," AND FREE_TEXT_NAME='Max Y value ",aSex1,"'",sep="")
yMaxFreeText = sqlQuery(myconn,sqlStringF)
pGraphs[[i]] <- list()
# get all data, also, link in with group name
sqlString <- paste("select * from RPT_BODY_WEIGHT,RPT_GROUP_INFO where RPT_BODY_WEIGHT.group_number",
" is not null and RPT_BODY_WEIGHT.rptjob_id=",
rptjobID," and RPT_BODY_WEIGHT.GROUP_NUMBER=RPT_GROUP_INFO.GROUP_NUMBER ",
" and RPT_BODY_WEIGHT.SEX=RPT_GROUP_INFO.SEX ",
" and RPT_BODY_WEIGHT.RPTJOB_ID=RPT_GROUP_INFO.RPTJOB_ID ")
sqlString <-paste(sqlString," and RPT_BODY_WEIGHT.Sex = ")
sqlString <-paste(sqlString,aSex)
rslts = sqlQuery(myconn, sqlString)
#  some displays of the data:
rslts
# check if results
if (nrow(rslts) > 0) {
numGraphs <- numGraphs+1
# summarize to means by group, using phase footnote concatinated with day
# sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,FOOTNOTE_SYMBOL||padl(DAY_OF_PHASE,3) AS DAYPHS,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,FOOTNOTE_SYMBOL,DAY_OF_PHASE  ')
# summarize with phase name and day separately
sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,DAY_OF_PHASE,PHASE_NAME,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,PHASE_NAME,DAY_OF_PHASE')
# line plot of means with error bars
# Create a simple example dataset
df <- data.frame(
day = factor(sumres$DAY_OF_PHASE),
resp = sumres$avg,
phase = factor(sumres$PHASE_NAME),
Group = factor(sumres$GROUP1),
se = sumres$stdev
)
# Define the top and bottom of the errorbars
title <- "Body Weights Over Time\n Study "
title <- paste(title,protocol$STUDY_NUMBER)
title <- paste(title," : Sex =")
title <- paste(title,aSex)
title <- paste(title," \n")
title <- paste(title,"Printed: ")
title <- paste(title,header$DATE_TIME_ENTERED)
title <- paste(title," \n")
title <- paste(title,"Pristima ")
title <- paste(title,header$VERSION)
# title <- paste(title," \n",Phase_info_string)
limits <- aes(ymax = resp + se, ymin=resp - se)
pGraphs[[numGraphs]][[1]] <- ggplot(df, aes(colour=Group, shape=Group, y=resp, x=day))
# groups which define the lines - here the groups in the
# original dataframe
pGraphs[[numGraphs]][[1]] <- pGraphs[[numGraphs]][[1]] + geom_line(aes(group=Group)) +
geom_point(aes(group=Group)) + labs(x = "Day", y = "Body Weight (g)",title = title) +
scale_y_continuous(expand = c(0, 0),limits = c(0,as.numeric(yMaxFreeText[1]))) +
facet_grid(.~phase,scales="free")
}  # end row count check
}
# save to pdf, one per page
pdf(outputFileName, onefile = TRUE,width=11,height=8.5)
for (i in 1:numGraphs) {
do.call("grid.arrange", pGraphs[[i]])
}
dev.off()
close(myconn)
#rpt_body_weight.report_order is phase_name order
# Pristima bw plot
#install.packages("RODBC")
#install.packages("ggplot2")
#install.packages("sqldf")
#install.packages("gridExtra")
library(RODBC)
library(ggplot2)
library(sqldf)
library(gridExtra)
Args<-commandArgs(TRUE)
# get the command line arguments
rptjobID <- Args[1]
rptjobNumber <- Args[2]
outputFormat <- Args[3]
outputFileName <- Args[4]
# debug values below
rptjobID <- 3555451
rptjobNumber <- 1
outputFormat <- "pdf"
outputFileName <- "C:/temp/temp.pdf"
#
myconn <-odbcConnect("pristima",believeNRows=FALSE)
sqlString <- paste("select * from RPT_HEADER where rptjob_id=",rptjobID)
header = sqlQuery(myconn, sqlString)
sqlString <- paste("select * from RPT_PROTOCOL where rptjob_id=",rptjobID)
protocol = sqlQuery(myconn, sqlString)
# create phase footnote mapping
sqlString <- paste("SELECT DISTINCT FOOTNOTE_SYMBOL||'='||PHASE_NAME,report_order FROM RPT_BODY_WEIGHT where rptjob_id=",rptjobID,
" order by report_order")
phase_info = sqlQuery(myconn, sqlString)
Phase_info_string = paste("Phase abbreviations: ",paste(phase_info[,1], collapse = ","),collapse=" ")
numGraphs <- 0
pGraphs <- list()
for(i in 1:2){
# loop for males and females
if (i==1) {
aSex <- "'M'"
aSex1 <- "Males"
} else {
aSex<-"'F'"
aSex1 <- "Females"
}
# get from freetext, yMax
sqlStringF <- paste("SELECT FREE_TEXT FROM RPT_FREE_TEXT where rptjob_id=",rptjobID," AND FREE_TEXT_NAME='Max Y value ",aSex1,"'",sep="")
yMaxFreeText = sqlQuery(myconn,sqlStringF)
pGraphs[[i]] <- list()
# get all data, also, link in with group name
sqlString <- paste("select * from RPT_BODY_WEIGHT,RPT_GROUP_INFO where RPT_BODY_WEIGHT.group_number",
" is not null and RPT_BODY_WEIGHT.rptjob_id=",
rptjobID," and RPT_BODY_WEIGHT.GROUP_NUMBER=RPT_GROUP_INFO.GROUP_NUMBER ",
" and RPT_BODY_WEIGHT.SEX=RPT_GROUP_INFO.SEX ",
" and RPT_BODY_WEIGHT.RPTJOB_ID=RPT_GROUP_INFO.RPTJOB_ID ")
sqlString <-paste(sqlString," and RPT_BODY_WEIGHT.Sex = ")
sqlString <-paste(sqlString,aSex)
rslts = sqlQuery(myconn, sqlString)
#  some displays of the data:
rslts
# check if results
if (nrow(rslts) > 0) {
numGraphs <- numGraphs+1
# summarize to means by group, using phase footnote concatinated with day
# sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,FOOTNOTE_SYMBOL||padl(DAY_OF_PHASE,3) AS DAYPHS,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,FOOTNOTE_SYMBOL,DAY_OF_PHASE  ')
# summarize with phase name and day separately
sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,DAY_OF_PHASE,PHASE_NAME,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,PHASE_NAME,DAY_OF_PHASE')
# line plot of means with error bars
# Create a simple example dataset
df <- data.frame(
day = factor(sumres$DAY_OF_PHASE),
resp = sumres$avg,
phase = factor(sumres$PHASE_NAME),
Group = factor(sumres$GROUP1),
se = sumres$stdev
)
# Define the top and bottom of the errorbars
title <- "Body Weights Over Time\n Study "
title <- paste(title,protocol$STUDY_NUMBER)
title <- paste(title," : Sex =")
title <- paste(title,aSex)
title <- paste(title," \n")
title <- paste(title,"Printed: ")
title <- paste(title,header$DATE_TIME_ENTERED)
title <- paste(title," \n")
title <- paste(title,"Pristima ")
title <- paste(title,header$VERSION)
# title <- paste(title," \n",Phase_info_string)
limits <- aes(ymax = resp + se, ymin=resp - se)
pGraphs[[numGraphs]][[1]] <- ggplot(df, aes(colour=Group, shape=Group, y=resp, x=day))
# groups which define the lines - here the groups in the
# original dataframe
pGraphs[[numGraphs]][[1]] <- pGraphs[[numGraphs]][[1]] + geom_line(aes(group=Group)) +
geom_point(aes(group=Group)) + labs(x = "Day", y = "Body Weight (g)",title = title) +
scale_y_continuous(expand = c(0, 0),limits = c(0,as.numeric(yMaxFreeText[1]))) +
facet_grid(.~phase,scales="free",space=free_x)
}  # end row count check
}
# save to pdf, one per page
pdf(outputFileName, onefile = TRUE,width=11,height=8.5)
for (i in 1:numGraphs) {
do.call("grid.arrange", pGraphs[[i]])
}
dev.off()
close(myconn)
# Pristima bw plot
#install.packages("RODBC")
#install.packages("ggplot2")
#install.packages("sqldf")
#install.packages("gridExtra")
library(RODBC)
library(ggplot2)
library(sqldf)
library(gridExtra)
Args<-commandArgs(TRUE)
# get the command line arguments
rptjobID <- Args[1]
rptjobNumber <- Args[2]
outputFormat <- Args[3]
outputFileName <- Args[4]
# debug values below
rptjobID <- 3555451
rptjobNumber <- 1
outputFormat <- "pdf"
outputFileName <- "C:/temp/temp.pdf"
#
myconn <-odbcConnect("pristima",believeNRows=FALSE)
sqlString <- paste("select * from RPT_HEADER where rptjob_id=",rptjobID)
header = sqlQuery(myconn, sqlString)
sqlString <- paste("select * from RPT_PROTOCOL where rptjob_id=",rptjobID)
protocol = sqlQuery(myconn, sqlString)
# create phase footnote mapping
sqlString <- paste("SELECT DISTINCT FOOTNOTE_SYMBOL||'='||PHASE_NAME,report_order FROM RPT_BODY_WEIGHT where rptjob_id=",rptjobID,
" order by report_order")
phase_info = sqlQuery(myconn, sqlString)
Phase_info_string = paste("Phase abbreviations: ",paste(phase_info[,1], collapse = ","),collapse=" ")
numGraphs <- 0
pGraphs <- list()
for(i in 1:2){
# loop for males and females
if (i==1) {
aSex <- "'M'"
aSex1 <- "Males"
} else {
aSex<-"'F'"
aSex1 <- "Females"
}
# get from freetext, yMax
sqlStringF <- paste("SELECT FREE_TEXT FROM RPT_FREE_TEXT where rptjob_id=",rptjobID," AND FREE_TEXT_NAME='Max Y value ",aSex1,"'",sep="")
yMaxFreeText = sqlQuery(myconn,sqlStringF)
pGraphs[[i]] <- list()
# get all data, also, link in with group name
sqlString <- paste("select * from RPT_BODY_WEIGHT,RPT_GROUP_INFO where RPT_BODY_WEIGHT.group_number",
" is not null and RPT_BODY_WEIGHT.rptjob_id=",
rptjobID," and RPT_BODY_WEIGHT.GROUP_NUMBER=RPT_GROUP_INFO.GROUP_NUMBER ",
" and RPT_BODY_WEIGHT.SEX=RPT_GROUP_INFO.SEX ",
" and RPT_BODY_WEIGHT.RPTJOB_ID=RPT_GROUP_INFO.RPTJOB_ID ")
sqlString <-paste(sqlString," and RPT_BODY_WEIGHT.Sex = ")
sqlString <-paste(sqlString,aSex)
rslts = sqlQuery(myconn, sqlString)
#  some displays of the data:
rslts
# check if results
if (nrow(rslts) > 0) {
numGraphs <- numGraphs+1
# summarize to means by group, using phase footnote concatinated with day
# sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,FOOTNOTE_SYMBOL||padl(DAY_OF_PHASE,3) AS DAYPHS,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,FOOTNOTE_SYMBOL,DAY_OF_PHASE  ')
# summarize with phase name and day separately
sumres <- sqldf('  select GROUP_NUMBER||":"||SINGLE_REGIM_DOSE_LEVEL AS GROUP1,DAY_OF_PHASE,PHASE_NAME,avg(WEIGHT),stdev(WEIGHT) from rslts group by GROUP1,PHASE_NAME,DAY_OF_PHASE')
# line plot of means with error bars
# Create a simple example dataset
df <- data.frame(
day = factor(sumres$DAY_OF_PHASE),
resp = sumres$avg,
phase = factor(sumres$PHASE_NAME),
Group = factor(sumres$GROUP1),
se = sumres$stdev
)
# Define the top and bottom of the errorbars
title <- "Body Weights Over Time\n Study "
title <- paste(title,protocol$STUDY_NUMBER)
title <- paste(title," : Sex =")
title <- paste(title,aSex)
title <- paste(title," \n")
title <- paste(title,"Printed: ")
title <- paste(title,header$DATE_TIME_ENTERED)
title <- paste(title," \n")
title <- paste(title,"Pristima ")
title <- paste(title,header$VERSION)
# title <- paste(title," \n",Phase_info_string)
limits <- aes(ymax = resp + se, ymin=resp - se)
pGraphs[[numGraphs]][[1]] <- ggplot(df, aes(colour=Group, shape=Group, y=resp, x=day))
# groups which define the lines - here the groups in the
# original dataframe
pGraphs[[numGraphs]][[1]] <- pGraphs[[numGraphs]][[1]] + geom_line(aes(group=Group)) +
geom_point(aes(group=Group)) + labs(x = "Day", y = "Body Weight (g)",title = title) +
scale_y_continuous(expand = c(0, 0),limits = c(0,as.numeric(yMaxFreeText[1]))) +
facet_grid(.~phase,scales="free",space="free_x")
}  # end row count check
}
# save to pdf, one per page
pdf(outputFileName, onefile = TRUE,width=11,height=8.5)
for (i in 1:numGraphs) {
do.call("grid.arrange", pGraphs[[i]])
}
dev.off()
close(myconn)
install.packages("RODBC")
install.packages("ggplot2")
install.packages("sqldf")
install.packages("gridExtra")
install.packages("ggplot2")
shiny::runApp('phuse-scripts/contributed/Nonclinical/R/BGapp')
