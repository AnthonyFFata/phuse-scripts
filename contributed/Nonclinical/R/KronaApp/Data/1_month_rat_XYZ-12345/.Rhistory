source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/R/Data_and_Scripts/Test_Function.R')
source('~/.active-rstudio-document')
a
source('~/.active-rstudio-document')
a
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
a <- cbind(12,13)
b <- 12
c <- 13
a <- cbind(b,c)
a
a$b
a <- data.frame(a)
a
a$b
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App')
install.packages()
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
source('~/R/Data_and_Scripts/Generalized_Imperfect_Comparator.R')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
shiny::runApp('I:/OIVD/DMD/Imperfect_Comparator_App/App')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
bestPPA[30]
trueP[30]
truePrevalence[30]
bestNPA[30]
observedPrevalence[30]
source('https://bioconductor.org/biocLite.R')
biocLite('JASPAR2014')
source('https://bioconductor.org/biocLite.R')
biocLite('JASPAR2014')
biocLite('JASPAR2016')
rnorm()
qnorm(1,10,100)
rnorm(1,10,100)
data1 <- rnorm(100,1,1)
data1
data1 <- rnorm(100,0,1)
data2 <- rnorm(100,0,1)
data1
data2
mean(data1)
mean(data2)
t.test(data1,data2)
results <- t.test(data1,data2)
results
results$p.value
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(PropCIs)
scoreci(1,4,0.95)
scoreci(1,2,0.95)
scoreci(1,3,0.95)
scoreci(1,100,0.95)
rnorm(1,1,10)
qnorm(1,1,10)
mnorm(1,1,10)
nnorm(1,1,10)
nnorm(10,1,10)
rnorm(10,1,10)
source('~/.active-rstudio-document')
Data1
Data2
t.test(Data1,Data2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Data1
Data2
mean(Data1)
mean(Data2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(lattice)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(histogram(pValues,breaks=c(seq(0,1,0.01)),xlim=c(0,1)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(histogram(pValues,breaks=c(seq(0,1,threshold)),xlim=c(0,1)),ylim=(c(0,100)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(histogram(pValues,breaks=c(seq(0,1,threshold)),xlim=c(0,1)),ylim=(c(0,1000)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
xyplot(histogram(pValues,breaks=c(seq(0,1,threshold)),xlim=c(0,1)),ylim=(c(0,1)))
source('~/.active-rstudio-document')
plot(histogram(pValues,breaks=c(seq(0,1,threshold)),xlim=c(0,1)),ylim=(c(0,1)))
source('~/.active-rstudio-document')
plot(histogram(pValues,breaks=c(seq(0,1,threshold)),xlim=c(0,1)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/R/Data_and_Scripts/pValueDist.R')
source('~/R/Data_and_Scripts/pValueDist.R')
source('~/.active-rstudio-document')
source('~/R/Historical Control.R')
hist(p.values)
hist(pValues)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
mean(pValues)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
count/i
i
count
mean(pValues)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
count
i
round(count/i,digits=1)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
percentDiff
source('~/R/Historical Control.R')
hist(percentDiff)
warnings()
source('~/R/Historical Control.R')
hist(percentDiff)
popCV
sd(percentDiff)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
pValues
hist(pValues)
percentDiff
popCV
cData
mean(cData)
mean(tData)
percentDiff[i]
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
percentEffectSizes
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
hist(diff)
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')resutls
results
effectSizes
diff
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
effectSizes
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
3.03/2.72
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
source('~/R/Historical Control.R')
effectSizes
install.packages('foreign')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App/App_Button')
shiny::runApp('C:/Users/Kevin.Snyder/Desktop/Imperfect_Comparator_App/App_Button')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
shiny::runApp('Submissions/Test')
getwd()
setwd('C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_dog_BAY-1021189/')
EX <- read.csv('EX.csv')
head(EX)
dim(EX)
DM <- read.csv('DM.csv')
dim(DM)
length(unique(EX$USUBJID))
setwd('C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_rat_XYZ-12345/')
EX <- read.csv('EX.csv')
head(EX)
dim(EX)
unique(EX$USUBJID)
length(unique(EX$USUBJID))
dim(EX)
EXdata <- EX
DSdata <- read.csv('DS.csv')
head(EXdata)
DSdata
head(DSdata)
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
as.character(1)
shiny::runApp('~/Submissions/Test')
setwd("C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_rat_PDS-FAKEDRUG-111")
EXpds <- read.csv('EX.csv')
setwd("C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_rat_XYZ-12345/")
EXxyz <- read.csv('EX.csv')
a <- cbind(EXpds$USUBJID,EXpds$EXENDY)
b <- cbind(EXxyz$USUBJID,EXxyz$EXENDY)
a
b
rbind(a,b)
a <- as.data.frame(a)
b <- as.data.frame(b)
a
b
rbind(a,b)
setwd("C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_rat_PDS-FAKEDRUG-111")
EXdataCSV <- read.csv('EX.csv')
if ('EXSTDY' %in% colnames(EXdataCSV)) {
EXfields <- c('USUBJID','EXENDY','EXSTDY')
EXfieldNames <- c('SubjectID','EndDay','StartDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
} else {
EXfields <- c('USUBJID','EXENDY')
EXfieldNames <- c('SubjectID','EndDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
StartDay <- rep(NA,dim(EXdataTmp)[1])
EXdataTmp <- cbind(EXdataTmp,StartDay)
EXdataTmp$SubjectID <- as.character(EXdataTmp$SubjectID)
}
subTable <- function(fields,names,rawData) {
count <- 0
colIndex <- NA
for (field in fields) {
count <- count + 1
if (length(which(colnames(rawData)==field))==1) { # test to make sure we get each column correctly
index <- which(colnames(rawData)==field)
} else {
stop(paste(field,' Not Present in Dataset!',sep='')) # break and throw error message
}
colIndex[count] <- index
}
Data <- rawData[,colIndex]
colnames(Data) <- names
return(Data)
}
# Function to check a TXVAL given a TXPARMCD and SETCD
getFieldValue <- function(dataset,queryField,indexFields,indexValues) {
for (i in 1:length(indexFields)) {
indexTmp <- which(dataset[,indexFields[i]]==indexValues[i])
if (i == 1) {
index <- indexTmp
} else {
index <- intersect(index,indexTmp)
}
}
fieldValue <- dataset[index,queryField]
return(levels(dataset[,queryField])[fieldValue])
}
EXdataCSV <- read.csv('EX.csv')
if ('EXSTDY' %in% colnames(EXdataCSV)) {
EXfields <- c('USUBJID','EXENDY','EXSTDY')
EXfieldNames <- c('SubjectID','EndDay','StartDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
} else {
EXfields <- c('USUBJID','EXENDY')
EXfieldNames <- c('SubjectID','EndDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
StartDay <- rep(NA,dim(EXdataTmp)[1])
EXdataTmp <- cbind(EXdataTmp,StartDay)
EXdataTmp$SubjectID <- as.character(EXdataTmp$SubjectID)
}
EXdataTmp
EXdata <- EXdataTmp
setwd("C:/Users/Kevin.Snyder/Documents/Submissions/Test/1_month_rat_XYZ-12345/")
EXdataCSV <- read.csv('EX.csv')
if ('EXSTDY' %in% colnames(EXdataCSV)) {
EXfields <- c('USUBJID','EXENDY','EXSTDY')
EXfieldNames <- c('SubjectID','EndDay','StartDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
} else {
EXfields <- c('USUBJID','EXENDY')
EXfieldNames <- c('SubjectID','EndDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
StartDay <- rep(NA,dim(EXdataTmp)[1])
EXdataTmp <- cbind(EXdataTmp,StartDay)
EXdataTmp$SubjectID <- as.character(EXdataTmp$SubjectID)
}
EXdataTmp
EXdata
EXdataTmp
rbind(EXdata,EXdataTmp)
if ('EXSTDY' %in% colnames(EXdataCSV)) {
EXfields <- c('USUBJID','EXENDY','EXSTDY')
EXfieldNames <- c('SubjectID','EndDay','StartDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
} else {
EXfields <- c('USUBJID','EXENDY')
EXfieldNames <- c('SubjectID','EndDay')
EXdataTmp <- subTable(EXfields,EXfieldNames,EXdataCSV)
StartDay <- rep(NA,dim(EXdataTmp)[1])
EXdataTmp <- cbind(EXdataTmp,StartDay)
EXdataTmp$SubjectID <- as.factor(EXdataTmp$SubjectID)
}
EXdataTmp
rbind(EXdata,EXdataTmp)
EXdataTmp$SubjectID
EXdataTmp$SubjectID[1]
EXdataTmp$SubjectID <- as.character(EXdataTmp$SubjectID)
EXdataTmp$SubjectID[1]
rbind(EXdata,EXdataTmp)
tail(rbind(EXdata,EXdataTmp))
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
shiny::runApp('~/Submissions/Test')
